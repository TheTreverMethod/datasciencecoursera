x <- numeric()
x
x <- c(x, 1)
x
ls()
x <- c(1,2,3)
mean(x)
dim(x) <- c(2,3)
dim(x) <- c(3,1)
x
colnames(x) <- c('column')
x
class(x)
as.data.frame(x)
class(x)
x <- as.data.frame(x)
class(x)
x
x <- c(1,3,5)
mean(x, ...)
... =
mean(x, ...)
mean(x, ...)
x <- c(1,3,4)
mean(x, ...)
... = 4
mean(x, ...)
x <- 4
testNewOperator <- function() {}
testNewOperator <- function() { set <- function() { x <- 3 } }
testNewOperator <- function() { set <- function() { x <- 3 } list(set = set) }
testNewOperator <- function() { set <- function() { x <- 3 } return(list(set = set)) }
testNewOperator <- function() {
set <- function() {
x <- 3
}
list(set = set)
}
testNewOperator$set()
testNewOperator <- function() {
set <- function() {
x <<- 3
}
list(set = set)
}
testNewOperator$set()
?closure
m <- c(4,7,2,6)
dim(m) <- c(2,2)
m
m <- c(4,2,7,6)
dim(m) <- c(2,2)
m
solve(m)
?mean
mean(c(1,3), c(2,4))
?solve
?mean
dir()
setwd('Code/ProgrammingAssignment2')
dir()
source('cachematrix.R')
mx
matrix(c(4,7,2,6), nrow = 2, ncol = 4)
matrix(c(4,7,2,6), nrow = 2, ncol = 2)
matrix(c(4,2,7,6), nrow = 2, ncol = 2)
mx <- matrix(c(4,2,7,6), nrow = 2, ncol = 2)
mx
mx
cacheSolve(makeCacheMatrix(mx))
ls()
rm(list=('ls'))
rm(list=(ls())
rm(list=ls())
rm(list=ls())
source('cachematrix.R')
m <- matrix(c(4,2,7,6), nrow = 2, ncol = 2)
cacheSolve(makeCacheMatrix(m))
cacheSolve(makeCacheMatrix(m))
set.seed(1)
rpois(5, 2)
rm(list=ls())
swirl()
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
644232 / 8
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, r = TRUE, p = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
play()
cars
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
?plot
plot(x = cars$speed, y = cars$dist, xlab = 'Speed', ylab = 'Distance')
plot(x = cars$speed, y = cars$dist, xlab = 'Speed')
plot(x = cars$speed, y = cars$dist, xlab = 'Speed', ylab = 'Stopping Distance')
plot(x = cars$speed, y = cars$dist, ylab = 'Stopping Distance')
plot(x = cars$speed, y = cars$dist, xlab = 'Speed', ylab = 'Stopping Distance')
plot(cars, main = 'My Plot')
?plot
plot(cars, sub = 'My Plot Subtitle')
?par
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2
plot(cars, pch = 2)
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(mtcars, formula = mpg ~ cyl)
boxplot(data = mtcars, formula = mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
setwd('../datasciencecoursera/R Programming/Week 4')
setwd('rprog-data-ProgAssignment3')
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
outcome[,11]
outcome[,11] <- as.numeric(outcome[,11])
outcome[,11]
hist(outcome[,11])
summary(outcome)
?stop
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
rm(list = ls())
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
str(outcome)
?table
table(outcome$State)
outcome[,'State] == 'AL''
outcome[,'State'] == 'AL'
outcome[[1]]
outcome[[3]]
length(unique(outcome['State']))
unique(outcome['State'])
length(unique(outcome[,'State']))
outcome[,'State'] == 'AL'
which(outcome[,'State'] == 'AL')
length(which(outcome[,'State'] == 'AL'))
?any
any(outcome[,'State'] == 'AL')
any(outcome[,'State'] == 'XX')
any(outcome[,'State'] == 'GU')
any(outcome[,'State'] == 'HI')
any(c("heart attack", "heart failure", "pneumonia") == 'adsfasdf')
any(c("heart attack", "heart failure", "pneumonia") == 'pneumonia')
any(c("heart attack", "heart failure", "pneumonia") == 'ffff')
outcome[,'State'] == 'AL'
which(outcome[,'State'] == 'AL')
max(c(1,2,3))
outcome[which(outcome[,'State'] == 'AL'),]
outcome[which(outcome[,'State'] == 'AL'),11]
min(outcome[which(outcome[,'State'] == 'AL'),11])
as.numeric(outcome[which(outcome[,'State'] == 'AL'),11])
min(as.numeric(outcome[which(outcome[,'State'] == 'AL'),11]))
as.numeric(outcome[which(outcome[,'State'] == 'AL'),11])
outcome[which(outcome[,'State'] == 'AL' && !is.na(outcome[,11])),11]
which(outcome[,'State'] == 'AL' && !is.na(outcome[,11]))
is.na(outcome[,11])
is.na(as.numeric(outcome[,11]))
which(outcome[,'State'] == 'AL' && !is.na(as.numeric(outcome[,11])))
indices <- which(outcome[,'State'] == 'AL' && !is.na(as.numeric(outcome[,11])))
indices
indices <- which(outcome[,'State'] == 'AL' && !(is.na(as.numeric(outcome[,11]))))
indices
is.na(as.numeric(outcome[,11]))
indices <- which(outcome[,'State'] == 'AL' & (!is.na(as.numeric(outcome[,11]))))
indices
outcome[4,11]
outcome[10,11]
outcome[39,11]
outcome[indices,11]
as.numeric(outcome[indices,11])
?min
min(as.numeric(outcome[indices,11]))
which.min(as.numeric(outcome[indices,11]))
outcome[46,11]
outcome[47,11]
which.min(as.numeric(outcome[indices,11]))
which.is.min(as.numeric(outcome[indices,11]))
which.min(as.numeric(outcome[indices,11]))
min(as.numeric(outcome[indices,11]))
min(as.numeric(outcome[indices,11]))
which(outcome[,'State'] == 'AL' & outcome[,11] == 13.3)
best <- which(outcome[,'State'] == 'AL' & outcome[,11] == 13.3)
outcome[best]
outcome[best,]
indices <- which(outcome[,'State'] == 'AL' & (!is.na(as.numeric(outcome[,11]))))
source('best.R')
best('TX','heart attack')
source('best.R')
best('TX','heart attack')
states
STATES``
unique(outcome['State'])
unique(outcome[,'State'])
source('best.R')
best('TX','heart attack')
source('best.R')
best('TX','heart attack')
best('TX','heart failure')
?as.numeric
source('best.R')
best('TX','heart failure')
source('best.R')
best('TX','heart failure')
source('best.R')
best('TX','heart failure')
outcome[outcome[,'Hospital.Name'] == 'FORT DUNCAN MEDICAL CENTER']
outcome
outcome[,'Hospital.Name']
sort(outcome[,'Hospital.Name'])
sort(outcome[,'Hospital.Name'])[1000:2000]
any(outcome[,'Hospital.Name'] == 'FORT DUNCAN MEDICAL CENTER')
outcome[outcome[,'Hospital.Name'] == 'FORT DUNCAN MEDICAL CENTER',]
outcome[outcome[,'Hospital.Name'] == 'FORT DUNCAN MEDICAL CENTER','Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure']
source('best.R')
best("TX", "heart failure")
outcome[outcome[,'Hospital.Name'] == 'HARRIS COUNTY HOSPITAL DISTRICT','Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure']
source('best.R')
best("TX", "heart failure")
which(outcome[,'State'] == 'TX' & (!is.na(as.numeric(outcome[,17]))))
outcome[which(outcome[,'State'] == 'TX' & (!is.na(as.numeric(outcome[,17])))),17]
source('best.R')
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
source('best.R')
best("MD", "heart attack")
source('best.R')
best("MD", "heart attack")
source('best.R')
best("MD", "heart attack")
best("TX", "heart failure")
best("TX", "heart attack")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
source('best.R')
best("TX", "heart attack")
which(outcome[,'State'] == 'TX' & (!is.na(as.numeric(outcome[,11]))))
outcome[which(outcome[,'State'] == 'TX' & (!is.na(as.numeric(outcome[,11])))),11]
source('best.R')
best("TX", "heart attack")
outcome[which(outcome[,'State'] == 'TX' & (!is.na(as.numeric(outcome[,11])))),11]
min(as.numeric(outcome[ind,11]))
ind <- which(outcome[,'State'] == 'TX' & (!is.na(as.numeric(outcome[,11]))))
min(as.numeric(outcome[ind,11]))
outcome[,11] == 12
as.numeric(outcome[,11]) == 12
any(as.numeric(outcome[,11]) == 12)
which(as.numeric(outcome[,11]) == 12)
source('best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
outcome[,11]
as.numeric(outcome[,11])
options(warn = 0)
as.numeric(outcome[,11])
getOption('warn')
source('best.R')
best("MD", "heart attack")
best("TX", "heart failure")
source('best.R')
best("TX", "heart failure")
source('best.R')
best("TX", "heart failure")
best("TX", "heart attack")
best("MD", "heart attack")
best("MD", "pneumonia")
as.numeric(outcome[,11])
as.numeric(outcome[,11])
tail(c(1,2,3), 1)
tail(c(1,2,3), n = 1)
?order
order(outcome[,'Hospital.Name'])
sort(order(outcome[,'Hospital.Name']))
head(order(outcome[,'Hospital.Name']))
head(order(outcome))
order(outcome)
order(outcome, outcome[,'Hospital.Name'])
head(outcome[order('Hospital.Name')])
head(outcome[order('Hospital.Name'),])
head(outcome[order('Hospital.Name'),])[,'Hospital.Name']
outcome[with(outcome, order(Hospital.Name)), ]
head(outcome[with(outcome, order("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Hospital.Name")), ])
head(outcome[with(outcome, order(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, Hospital.Name)), ], n = 5)
head(outcome[with(outcome, order(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, Hospital.Name)), ], n = 5)
head(outcome[order(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, Hospital.Name), ], n = 5)
head(outcome[order('Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure', 'Hospital.Name'), ], n = 5)
outcome[order('Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure', 'Hospital.Name'), ]
?order
order(outcome[,'Hospital.Name'])
order(outcome[,2], outcome[,11])
order(outcome[,11], outcome[,2])
?sort
outcome[,'Order'] <- order(outcome[,11], outcome[,2])
outcome[,'Order']
order(outcome[,'Order'])
dir()
outcome <- read.csv('outcome-of-care-measures.csv')
outcome.order <- order(outcome[,11], outcome[,2])
outcome[outcome.order,]
outcome.order <- order(as.numeric(outcome[,11]), outcome[,2])
outcome[outcome.order,]
outcome.order <- order(as.numeric(outcome[,11]), outcome[,2])
outcome[outcome.order,]
outcome[outcome.order,]
options(warn = 0)
outcome.order <- order(outcome[,'Hospital.Name'])
outcome[outcome.order,]
source('rankhospital.R')
rankhospital("TX", "heart failure", 4)
outcome <- read.csv('outcome-of-care-measures.csv')
outcome <- outcome[which(outcome[.'State'] == 'TX'),]
outcome <- outcome[which(outcome[,'State'] == 'TX'),]
head(outcome[,'State'])
unique(outcome[,'State'])
is_validOutcomeResult <- function(data, col) {
!is.na(as.numeric(data[,col]))
}
outcome <- outcome[which(is_validOutcomeResult(outcome, 17)),]
head(outcome)
outcome[,c(7,17)]
source('rankhospital.R')
rankhospital("TX", "heart failure", 4)
debug(rankhospital)
source('rankhospital.R')
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 4)
data()
data
data[,17]
data[,17]
data[,'OutcomeNumeric']
data[ranking, 'Hospital.Name']
blah
source('rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
rankhospital("TX", "heart failure", "best")
?tapply
getFirst <- function(df) { c(df[1,2],df[1,11]) }
tapply(outcome, outcome$State, getFirst, outcome)
tapply(outcome, outcome$State, getFirst)
outcome$State
tail(outcome[,'State'])
nrow(outcome)
nrow(outcome$State)
nrow(outcome[,'State'])
outcome
length(outcome[,'State'])
nrow(outcome)
tapply(outcome, outcome$State, getFirst, outcome)
outcome$State
length(outcome$State)
getFirst
outcome <- read.csv('outcome-of-care-measures.csv')
nrow(outcome)
split(outcome, outcome$State)
class(outcome)
outcome[1:5,'State']
factor(outcome[,'State'])
stateFactors <- factor(outcome[,'State'])
tapply(outcome,stateFactors,getFirst,outcome)
lapply(split(outcome, stateFactors), getFirst, outcome)
stateFactors
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric())
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
?mean
tapply(flags$population, flags$landmass, rnorm, 10)
?rnorm
ranking <- order(data[,'State'], data[,'OutcomeNumeric'], data[,'Hospital.Name'])
ranking <- order(outcome[,'State'], outcome[,'OutcomeNumeric'], outcome[,'Hospital.Name'])
outcome[,'OutcomeNumeric'] <- as.numeric(outcome[,11])
ranking <- order(outcome[,'State'], outcome[,'OutcomeNumeric'], outcome[,'Hospital.Name'])
outcome <- outcome[ranking,]
sapply(flags$population, flags$landmass, rnorm, 10)
tapply(flags$population, flags$landmass, max)
val <- tapply(flags$population, flags$landmass, max)
class(val)
val[1]
val[[1]]
?row
outcome
row(outcome)
row(outcome[[1]])
?index
??index
rownames(outcome)
set_rankByState <- function(data) {
data[,'OutcomeRankByState'] <- 1:nrow(data)
}
tapply(outcome, outcome$State, set_rankByState)
tapply(outcome, outcome[,'State'], set_rankByState)
length(outcome[,'State'])
nrow(outcome)
flags
source('rankall.R')
rankall('heart attack', 20)
source('rankall.R')
rankall('heart attack', 20)
source('rankall.R')
rankall('heart attack', 20)
source('rankall.R')
rankall('heart attack', 20)
source('rankall.R')
rankall('heart attack', 20)
source('rankall.R')
rankall('heart attack', 20)
source('rankall.R')
rankall('heart attack', 20)
source('rankall.R')
rankall('heart attack', 20)
ranks <- rankall('heart attack', 20)
ranks
unlist(ranks)
matrix(unlist(ranks))
data.frame(unlist(ranks))
data.frame(ranks)
source('rankall.R')
rankall('heart attack', 20)
?data.frame
?unlist
source('rankall.R')
rankall('heart attack', 20)
source('rankall.R')
rankall('heart attack', 20)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source('best.R')
source('rankhospital.R')
source('rankall.R')
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
r
ncol(r)
rankall("pneumonia", "worst")
rankall("heart failure", 10)
rm(list = ls())
